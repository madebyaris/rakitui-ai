---
description: 
globs: 
alwaysApply: false
---
# Development Guide

This guide covers the development workflow for the Rakit UI AI project.

## Project Setup

- [package.json](mdc:package.json) defines the project dependencies and scripts
- TypeScript configuration is in [tsconfig.json](mdc:tsconfig.json)
- The project uses ES modules (type: "module" in package.json)
- Check [TODO.md](mdc:TODO.md) for planned improvements and features

## Build & Run

- `npm run build`: Cleans dist directory, compiles TypeScript, and builds MCP
- `npm run watch`: Watches for changes during development
- `npm start`: Starts the MCP server from the compiled dist directory

## Key Dependencies

- `@modelcontextprotocol/sdk`: Core MCP SDK
- `mcp-framework`: Framework for building MCP tools
- `open`: Library for opening URLs in the default browser

## Development Workflow

1. Create/modify tool implementations in `src/tools/`
2. Update templates as needed in `src/tools/templates/`
3. Run `npm run watch` for development
4. Test using `npm start`
5. Build for distribution with `npm run build`

## Working on Improvements

1. Check [TODO.md](mdc:TODO.md) for prioritized tasks
2. Create feature branches for each improvement
3. Follow the security guidelines in security-best-practices rule
4. Add tests according to testing-strategy rule
5. Optimize performance following performance-optimization rule

## Testing

- Unit tests: `npm test` (once implemented)
- Integration tests: `npm run test:integration`
- E2E tests: `npm run test:e2e`
- Coverage report: `npm run test:coverage`

## Contributing

1. Pick a task from TODO.md
2. Create a feature branch
3. Implement with tests
4. Update documentation
5. Submit pull request

## Note on Browser Integration

The server creates temporary files in a `tmp` directory at the project root. Make sure this directory has appropriate permissions for file creation.
